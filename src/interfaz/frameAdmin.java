package interfaz;

import dao.VendedorDAO;
import modelo.Vendedor;
import javax.swing.JOptionPane;
import java.util.List;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cassandra
 */
public class frameAdmin extends javax.swing.JInternalFrame
{    
    /**
     * Creates new form frameAdmin
     */
    public frameAdmin()
    {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);

        txtClave.getDocument().addDocumentListener(new javax.swing.event.DocumentListener()
        {
            @Override
            public void insertUpdate(DocumentEvent e)
            {
                filtrarEmpleados();
            }

            @Override
            public void removeUpdate(DocumentEvent e)
            {
                filtrarEmpleados();
            }

            @Override
            public void changedUpdate(DocumentEvent e)
            {
                filtrarEmpleados();
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelRegistro = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        radButtonAdmin = new javax.swing.JRadioButton();
        radButtonVendedor = new javax.swing.JRadioButton();
        txtNombre = new javax.swing.JTextField();
        txtDomicilio = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        passwordPrim = new javax.swing.JPasswordField();
        passwordConf = new javax.swing.JPasswordField();
        txtUsuario = new javax.swing.JTextField();
        registrarBtn = new javax.swing.JButton();
        modificarBtn = new javax.swing.JButton();
        limpiaBtn = new javax.swing.JButton();
        mostrarCB = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        panelEmpleados = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmpleados = new javax.swing.JTable();
        eliminar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo.png"))); // NOI18N

        setBorder(null);
        setTitle("Empleados");
        setPreferredSize(new java.awt.Dimension(700, 550));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setToolTipText("");

        panelRegistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/usuario33.png"))); // NOI18N
        panelRegistro.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Nombre completo:");
        panelRegistro.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Domicilio:");
        panelRegistro.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Contraseña:");
        panelRegistro.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Usuario:");
        panelRegistro.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Confirmar contraseña:");
        panelRegistro.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Teléfono:");
        panelRegistro.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, -1, -1));

        radButtonAdmin.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        radButtonAdmin.setText("Administrador");
        radButtonAdmin.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                radButtonAdminActionPerformed(evt);
            }
        });
        panelRegistro.add(radButtonAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, -1, -1));

        radButtonVendedor.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        radButtonVendedor.setText("Cajero");
        panelRegistro.add(radButtonVendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 190, -1, -1));
        panelRegistro.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 310, 30));

        txtDomicilio.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtDomicilioActionPerformed(evt);
            }
        });
        panelRegistro.add(txtDomicilio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 310, 30));
        panelRegistro.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, 190, 30));

        passwordPrim.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                passwordPrimActionPerformed(evt);
            }
        });
        panelRegistro.add(passwordPrim, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 150, 30));

        passwordConf.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                passwordConfActionPerformed(evt);
            }
        });
        panelRegistro.add(passwordConf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 160, 30));

        txtUsuario.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtUsuarioActionPerformed(evt);
            }
        });
        panelRegistro.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 310, 30));

        registrarBtn.setBackground(new java.awt.Color(51, 255, 51));
        registrarBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        registrarBtn.setText("Registrar");
        registrarBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                registrarBtnActionPerformed(evt);
            }
        });
        panelRegistro.add(registrarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 360, 130, -1));

        modificarBtn.setBackground(new java.awt.Color(51, 255, 51));
        modificarBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                modificarBtnActionPerformed(evt);
            }
        });
        panelRegistro.add(modificarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, 130, -1));

        limpiaBtn.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        limpiaBtn.setText("Limpiar");
        limpiaBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                limpiaBtnActionPerformed(evt);
            }
        });
        panelRegistro.add(limpiaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 310, 130, -1));

        mostrarCB.setText("Mostrar contraseña");
        mostrarCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mostrarCBActionPerformed(evt);
            }
        });
        panelRegistro.add(mostrarCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo.png"))); // NOI18N
        jLabel10.setToolTipText("");
        panelRegistro.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 550));
        jLabel10.getAccessibleContext().setAccessibleName("");

        jTabbedPane1.addTab(" Registro y modificación de empleados", panelRegistro);

        panelEmpleados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel12.setText("Clave:");
        panelEmpleados.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, -1));

        txtClave.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        txtClave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtClaveActionPerformed(evt);
            }
        });
        panelEmpleados.add(txtClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 370, 28));

        tableEmpleados.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        tableEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String []
            {
                "ID", "Nombre", "Domicilio", "Usuario", "Télefono", "Puesto"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableEmpleados);

        panelEmpleados.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 660, 320));

        eliminar.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                eliminarActionPerformed(evt);
            }
        });
        panelEmpleados.add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo.png"))); // NOI18N
        panelEmpleados.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 530));

        jTabbedPane1.addTab("Consulta de empleados", panelEmpleados);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 550));
        jTabbedPane1.getAccessibleContext().setAccessibleName("Empleados");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtUsuarioActionPerformed
    {//GEN-HEADEREND:event_txtUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void registrarBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_registrarBtnActionPerformed
    {//GEN-HEADEREND:event_registrarBtnActionPerformed
        // Validación de campos vacíos
        if (txtNombre.getText().trim().isEmpty() || txtDomicilio.getText().trim().isEmpty()
                || txtUsuario.getText().trim().isEmpty() || txtTelefono.getText().trim().isEmpty()
                || passwordPrim.getPassword().length == 0 || passwordConf.getPassword().length == 0
                || (!radButtonAdmin.isSelected() && !radButtonVendedor.isSelected()))
        {

            JOptionPane.showMessageDialog(frameAdmin.this, "Todos los campos son obligatorios",
                    "Faltan datos", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validación de contraseñas
        if (!String.valueOf(passwordPrim.getPassword()).equals(String.valueOf(passwordConf.getPassword())))
        {
            JOptionPane.showMessageDialog(frameAdmin.this, "Las contraseñas no coinciden",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validación de formato de teléfono (10 dígitos)
        if (!txtTelefono.getText().matches("\\d{10}"))
        {
            JOptionPane.showMessageDialog(frameAdmin.this, "El teléfono debe tener 10 dígitos",
                    "Formato incorrecto", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Determinar el tipo de usuario
        int puesto = radButtonAdmin.isSelected() ? 1 : 2; // 1=Admin, 2=Vendedor

        try
        {
            // Crear objeto Vendedor con los datos del formulario
            Vendedor nuevoVendedor = new Vendedor();
            nuevoVendedor.setNombre(txtNombre.getText());
            nuevoVendedor.setDomicilio(txtDomicilio.getText());
            nuevoVendedor.setUsuario(txtUsuario.getText());
            nuevoVendedor.setContrasenia(String.valueOf(passwordPrim.getPassword()));
            nuevoVendedor.setTelefono(txtTelefono.getText());
            nuevoVendedor.setPuesto(puesto);

            // Insertar en la base de datos
            boolean resultado = VendedorDAO.insertarVendedor(nuevoVendedor);

            if (resultado)
            {
                JOptionPane.showMessageDialog(frameAdmin.this, "Empleado registrado con éxito",
                        "Éxito", JOptionPane.INFORMATION_MESSAGE);
                limpiar();
                llenarTablaVendedor(); // Actualizar la tabla
            } else
            {
                JOptionPane.showMessageDialog(frameAdmin.this, "Error al registrar empleado",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(frameAdmin.this, "Error: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_registrarBtnActionPerformed

    private void limpiaBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_limpiaBtnActionPerformed
    {//GEN-HEADEREND:event_limpiaBtnActionPerformed
        limpiar();
    }//GEN-LAST:event_limpiaBtnActionPerformed

    private void txtDomicilioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtDomicilioActionPerformed
    {//GEN-HEADEREND:event_txtDomicilioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDomicilioActionPerformed

    private void passwordPrimActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_passwordPrimActionPerformed
    {//GEN-HEADEREND:event_passwordPrimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordPrimActionPerformed

    private void passwordConfActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_passwordConfActionPerformed
    {//GEN-HEADEREND:event_passwordConfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordConfActionPerformed

    private void radButtonAdminActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_radButtonAdminActionPerformed
    {//GEN-HEADEREND:event_radButtonAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radButtonAdminActionPerformed

    private void txtClaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtClaveActionPerformed
    {//GEN-HEADEREND:event_txtClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClaveActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_eliminarActionPerformed
    {//GEN-HEADEREND:event_eliminarActionPerformed
        int filaSeleccionada = tableEmpleados.getSelectedRow();

        if (filaSeleccionada == -1)
        {
            JOptionPane.showMessageDialog(frameAdmin.this, "Seleccione un empleado para eliminar",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(frameAdmin.this,
                "¿Está seguro de eliminar este empleado?", "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION)
        {
            try
            {
                // Obtener el ID del vendedor seleccionado
                int idVendedor = (int) tableEmpleados.getValueAt(filaSeleccionada, 0);

                // Eliminar de la base de datos
                VendedorDAO vendedorDAO = new VendedorDAO();
                vendedorDAO.eliminarVendedor(idVendedor);

                JOptionPane.showMessageDialog(frameAdmin.this, "Empleado eliminado con éxito",
                        "Éxito", JOptionPane.INFORMATION_MESSAGE);
                llenarTablaVendedor(); // Actualizar la tabla
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(frameAdmin.this, "Error al eliminar empleado: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened
        llenarTablaVendedor();
    }//GEN-LAST:event_formInternalFrameOpened

    private void mostrarCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mostrarCBActionPerformed
    {//GEN-HEADEREND:event_mostrarCBActionPerformed
        if (mostrarCB.isSelected())
        {
            passwordPrim.setEchoChar((char) 0);
            passwordConf.setEchoChar((char) 0);
        } else
        {
            passwordPrim.setEchoChar('•');
            passwordConf.setEchoChar('•');
        }
    }//GEN-LAST:event_mostrarCBActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_modificarBtnActionPerformed
    {//GEN-HEADEREND:event_modificarBtnActionPerformed
        if (txtNombre.getText().trim().isEmpty() || txtDomicilio.getText().trim().isEmpty()
                || txtTelefono.getText().trim().isEmpty()
                || passwordPrim.getPassword().length == 0 || passwordConf.getPassword().length == 0
                || (!radButtonAdmin.isSelected() && !radButtonVendedor.isSelected()))
        {

            JOptionPane.showMessageDialog(frameAdmin.this, "Todos los campos son obligatorios",
                    "Faltan datos", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (!String.valueOf(passwordPrim.getPassword()).equals(String.valueOf(passwordConf.getPassword())))
        {
            JOptionPane.showMessageDialog(frameAdmin.this, "Las contraseñas no coinciden",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!txtTelefono.getText().matches("\\d{10}"))
        {
            JOptionPane.showMessageDialog(frameAdmin.this, "El teléfono debe tener 10 dígitos",
                    "Formato incorrecto", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int puesto = radButtonAdmin.isSelected() ? 1 : 2;       
        String nombreE = txtNombre.getText().trim();
        String domicilioE = txtDomicilio.getText().trim();
        String telefonoE = txtTelefono.getText().trim();
        String contrasenia = String.valueOf(passwordConf.getPassword());
        
        Vendedor vendedor = new Vendedor();
        vendedor.setNombre(nombreE);
        vendedor.setDomicilio(domicilioE);
        vendedor.setTelefono(telefonoE);
        vendedor.setContrasenia(contrasenia);
        vendedor.setPuesto(puesto);
        
        VendedorDAO vendedorDAO = new VendedorDAO();
        if (vendedorDAO.actualizarVendedor(vendedor))
        {
            JOptionPane.showMessageDialog(this, "Empleado actualizado correctamente.");
            limpiar();
            llenarTablaVendedor();
        } else
        {
            JOptionPane.showMessageDialog(this, "Error al actualizar al vendedor.", "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_modificarBtnActionPerformed
    
    private void limpiar()
    {
        txtNombre.setText("");
        txtDomicilio.setText("");
        txtUsuario.setText("");
        txtTelefono.setText("");
        passwordPrim.setText("");
        passwordConf.setText("");
        radButtonAdmin.setSelected(false);
        radButtonVendedor.setSelected(false);
        mostrarCB.setSelected(false);
    }

    public void filtrarEmpleados()
    {
        String textoBusqueda = txtClave.getText().trim().toLowerCase();
        DefaultTableModel modeloTabla = (DefaultTableModel) tableEmpleados.getModel();

        modeloTabla.setRowCount(0);

        VendedorDAO vendedorDAO = new VendedorDAO();

        List<Vendedor> vendedores = vendedorDAO.obtenerVendedores();

        for (Vendedor vendedor : vendedores)
        {
            if (vendedor.getNombre().toLowerCase().contains(textoBusqueda))
            {
                Object[] fila =
                {
                    vendedor.getId_vendedor(),
                    vendedor.getNombre(),
                    vendedor.getDomicilio(),
                    vendedor.getUsuario(),
                    vendedor.getTelefono(),
                    vendedor.getPuesto()
                };
                modeloTabla.addRow(fila);
            }
        }
    }

    private void llenarTablaVendedor()
    {
        DefaultTableModel modelo = (DefaultTableModel) tableEmpleados.getModel();
        modelo.setRowCount(0);

        List<Vendedor> vendedores = VendedorDAO.listarVendedor();

        for (Vendedor vendedor : vendedores)
        {
            Object[] fila =
            {
                vendedor.getId_vendedor(),
                vendedor.getNombre(),
                vendedor.getDomicilio(),
                vendedor.getUsuario(),
                vendedor.getTelefono(),
                vendedor.getPuesto()
            };
            modelo.addRow(fila);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limpiaBtn;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JCheckBox mostrarCB;
    private javax.swing.JPanel panelEmpleados;
    private javax.swing.JPanel panelRegistro;
    private javax.swing.JPasswordField passwordConf;
    private javax.swing.JPasswordField passwordPrim;
    private javax.swing.JRadioButton radButtonAdmin;
    private javax.swing.JRadioButton radButtonVendedor;
    private javax.swing.JButton registrarBtn;
    private javax.swing.JTable tableEmpleados;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtDomicilio;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
