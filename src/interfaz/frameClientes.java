package interfaz;

import dao.ClienteDAO;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import modelo.Cliente;
import modelo.Vendedor;

/**
 *
 * @author Cassandra
 */
public class frameClientes extends javax.swing.JInternalFrame
{

    private Vendedor empleadoActual;

    /**
     * Creates new form frameClientes
     */
    public frameClientes(Vendedor v)
    {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);

        txtID.getDocument().addDocumentListener(new javax.swing.event.DocumentListener()
        {
            @Override
            public void insertUpdate(DocumentEvent e)
            {
                filtrarClientes();
            }

            @Override
            public void removeUpdate(DocumentEvent e)
            {
                filtrarClientes();
            }

            @Override
            public void changedUpdate(DocumentEvent e)
            {
                filtrarClientes();
            }

        });
        this.empleadoActual = v;
        habilitarAcciones();
    }

    public void habilitarAcciones()
    {
        if (empleadoActual.getPuesto() == 1)
        {
            tabbedPane.setEnabledAt(1, true);
            panelRegistro.setVisible(true);
        } else
        {
            tabbedPane.setEnabledAt(1, false);
            eliminarBtn.setEnabled(false);           
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        tabbedPane = new javax.swing.JTabbedPane();
        panelConsulta = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        eliminarBtn = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        panelRegistro = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        modificarBtn = new javax.swing.JButton();
        registrarBtn = new javax.swing.JButton();
        limpiarBtn = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBorder(null);
        setTitle("Clientes");
        setPreferredSize(new java.awt.Dimension(700, 550));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener()
        {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt)
            {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt)
            {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelConsulta.setMinimumSize(new java.awt.Dimension(680, 530));
        panelConsulta.setPreferredSize(new java.awt.Dimension(680, 530));
        panelConsulta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableClientes.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String []
            {
                "ID", "Nombre", "Dirección", "Telefono", "Edad"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableClientes);

        panelConsulta.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 640, 340));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel6.setText("ID:");
        panelConsulta.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        eliminarBtn.setBackground(new java.awt.Color(255, 51, 51));
        eliminarBtn.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        eliminarBtn.setText("Eliminar");
        eliminarBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                eliminarBtnActionPerformed(evt);
            }
        });
        panelConsulta.add(eliminarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        txtID.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        txtID.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtIDActionPerformed(evt);
            }
        });
        panelConsulta.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 310, 28));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo.png"))); // NOI18N
        panelConsulta.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 510));

        tabbedPane.addTab("Consulta de clientes", panelConsulta);

        panelRegistro.setMinimumSize(new java.awt.Dimension(680, 530));
        panelRegistro.setPreferredSize(new java.awt.Dimension(680, 530));
        panelRegistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel2.setText("Nombre:");
        panelRegistro.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel3.setText("Dirección:");
        panelRegistro.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel4.setText("Telefono:");
        panelRegistro.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, -1, -1));

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel5.setText("Edad:");
        panelRegistro.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, -1, -1));

        modificarBtn.setBackground(new java.awt.Color(51, 255, 51));
        modificarBtn.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                modificarBtnActionPerformed(evt);
            }
        });
        panelRegistro.add(modificarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 380, -1, -1));

        registrarBtn.setBackground(new java.awt.Color(51, 255, 51));
        registrarBtn.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        registrarBtn.setText("Registrar");
        registrarBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                registrarBtnActionPerformed(evt);
            }
        });
        panelRegistro.add(registrarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, -1, -1));

        limpiarBtn.setBackground(new java.awt.Color(255, 51, 51));
        limpiarBtn.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        limpiarBtn.setText("Limpiar registro");
        limpiarBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                limpiarBtnActionPerformed(evt);
            }
        });
        panelRegistro.add(limpiarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        txtNombre.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtNombreActionPerformed(evt);
            }
        });
        panelRegistro.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 410, 28));

        txtTelefono.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        txtTelefono.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtTelefonoActionPerformed(evt);
            }
        });
        panelRegistro.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 410, 28));

        txtDireccion.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        txtDireccion.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtDireccionActionPerformed(evt);
            }
        });
        panelRegistro.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 410, 28));

        txtEdad.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        txtEdad.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txtEdadActionPerformed(evt);
            }
        });
        panelRegistro.add(txtEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 200, 28));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo.png"))); // NOI18N
        panelRegistro.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 530));

        tabbedPane.addTab("Registro y modificación de clientes", panelRegistro);

        getContentPane().add(tabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 0, 710, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtNombreActionPerformed
    {//GEN-HEADEREND:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtDireccionActionPerformed
    {//GEN-HEADEREND:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtTelefonoActionPerformed
    {//GEN-HEADEREND:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtEdadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtEdadActionPerformed
    {//GEN-HEADEREND:event_txtEdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEdadActionPerformed

    private void registrarBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_registrarBtnActionPerformed
    {//GEN-HEADEREND:event_registrarBtnActionPerformed
        String nombre = txtNombre.getText();
        String direccion = txtDireccion.getText();
        String telefono = txtTelefono.getText();
        String edad = txtEdad.getText();

        String expNombre = "[A-Za-z]{20,50}";
        String expDireccion = "[a-zA-Z0-9]{100}";
        String expTelefono = "[0-9]{10}";
        String expEdad = "[0-9]{1,2}";

        Pattern pattNombre = Pattern.compile(expNombre);
        Pattern pattDireccion = Pattern.compile(expDireccion);
        Pattern pattTelefono = Pattern.compile(expTelefono);
        Pattern pattEdad = Pattern.compile(expEdad);

        Matcher matchNombre = pattNombre.matcher(nombre);
        Matcher matchDireccion = pattDireccion.matcher(direccion);
        Matcher matchTelefono = pattTelefono.matcher(telefono);
        Matcher matchEdad = pattEdad.matcher(edad);

        boolean validaNombre = matchNombre.matches();
        boolean validaDireccion = matchDireccion.matches();
        boolean validaTelefono = matchTelefono.matches();
        boolean validaEdad = matchEdad.matches();

        if (!validaNombre && !validaDireccion && !validaTelefono && !validaEdad)
        {
            JOptionPane.showMessageDialog(frameClientes.this, "Hay campos vacios o incorrectos", "Faltan datos", JOptionPane.WARNING_MESSAGE);
        } else
        {
            try
            {
                int edadInt = Integer.parseInt(edad);

                Cliente nuevoCliente = new Cliente(0, nombre, direccion, telefono, edadInt);
                if (ClienteDAO.insertarCliente(nuevoCliente))
                {
                    JOptionPane.showMessageDialog(frameClientes.this, "Agregando Cliente...", "Registrar", JOptionPane.INFORMATION_MESSAGE);
                    llenarTablaClientes();
                    limpiarCampos();
                } else
                {
                    JOptionPane.showMessageDialog(frameClientes.this, "Error al agregar el cliente", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e)
            {
                JOptionPane.showMessageDialog(frameClientes.this, "Edad inválida", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_registrarBtnActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_txtIDActionPerformed
    {//GEN-HEADEREND:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_eliminarBtnActionPerformed
    {//GEN-HEADEREND:event_eliminarBtnActionPerformed
        int filaSeleccionada = tableClientes.getSelectedRow();

        if (filaSeleccionada == -1)
        {
            JOptionPane.showMessageDialog(this, "Selecciona un cliente para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de eliminar este cliente?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (confirmacion != JOptionPane.YES_OPTION)
        {            
            return;
        }

        // Suponiendo que la columna 0 es el id_cliente
        int idCliente = Integer.parseInt(tableClientes.getValueAt(filaSeleccionada, 0).toString());

        ClienteDAO clienteDAO = new ClienteDAO();
        clienteDAO.eliminarCliente(idCliente);
        llenarTablaClientes();
    }//GEN-LAST:event_eliminarBtnActionPerformed

    private void limpiarBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_limpiarBtnActionPerformed
    {//GEN-HEADEREND:event_limpiarBtnActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_limpiarBtnActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_modificarBtnActionPerformed
    {//GEN-HEADEREND:event_modificarBtnActionPerformed
        String nombre = txtNombre.getText().trim();
        String direccion = txtDireccion.getText().trim();
        String telefono = txtTelefono.getText().trim();
        String edadTexto = txtEdad.getText().trim();

        if (nombre.isEmpty() || direccion.isEmpty() || telefono.isEmpty() || edadTexto.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Por favor llena todos los campos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(this,
                "¿Estás seguro de modificar este empleado?", "Confirmar",
                JOptionPane.YES_NO_OPTION);
        if (confirmacion != JOptionPane.YES_OPTION)
        {
            return;
        }

        int edad;
        try
        {
            edad = Integer.parseInt(edadTexto);
        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Edad inválida. Debe ser un número.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Cliente cliente = new Cliente();
        cliente.setNombre(nombre);
        cliente.setDireccion(direccion);
        cliente.setTelefono(telefono);
        cliente.setEdad(edad);

        ClienteDAO clienteDAO = new ClienteDAO();
        if (clienteDAO.actualizarCliente(cliente))
        {
            JOptionPane.showMessageDialog(this, "Cliente actualizado correctamente.");
            limpiarCampos(); // si quieres, para limpiar después
            llenarTablaClientes();
        } else
        {
            JOptionPane.showMessageDialog(this, "Error al actualizar el cliente.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modificarBtnActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt)//GEN-FIRST:event_formInternalFrameOpened
    {//GEN-HEADEREND:event_formInternalFrameOpened
        llenarTablaClientes();
    }//GEN-LAST:event_formInternalFrameOpened

    private void limpiarCampos()
    {
        txtNombre.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtEdad.setText("");
    }

    public void filtrarClientes()
    {
        String textoBusqueda = txtID.getText().trim().toLowerCase();
        DefaultTableModel modeloTabla = (DefaultTableModel) tableClientes.getModel();

        modeloTabla.setRowCount(0);

        ClienteDAO clienteDAO = new ClienteDAO();

        List<Cliente> clientes = clienteDAO.obtenerClientes();

        for (Cliente cliente : clientes)
        {
            if (cliente.getNombre().toLowerCase().contains(textoBusqueda))
            {
                Object[] fila =
                {
                    cliente.getId_cliente(),
                    cliente.getNombre(),
                    cliente.getDireccion(),
                    cliente.getTelefono(),
                    cliente.getEdad()
                };
                modeloTabla.addRow(fila);
            }
        }
    }

    private void llenarTablaClientes()
    {
        DefaultTableModel modelo = (DefaultTableModel) tableClientes.getModel();
        modelo.setRowCount(0);

        List<Cliente> clientes = ClienteDAO.listarCliente();

        for (Cliente cliente : clientes)
        {
            Object[] fila =
            {
                cliente.getId_cliente(),
                cliente.getNombre(),
                cliente.getDireccion(),
                cliente.getTelefono(),
                cliente.getEdad()
            };
            modelo.addRow(fila);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiarBtn;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JPanel panelConsulta;
    private javax.swing.JPanel panelRegistro;
    private javax.swing.JButton registrarBtn;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tableClientes;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
